{"version":3,"file":"static/js/145.a2acc5b1.chunk.js","mappings":"iTACMA,EAAW,gCACXC,EAAU,mCAEHC,EAAiB,mCAAG,sGACRC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oCACkBC,IAFV,uBACvBG,EADuB,EACvBA,KADuB,kBAKxBA,EAAKC,QAAQC,KAAI,YACtB,MAAO,CACLC,GAFuC,EAAhBA,GAGvBC,MAHuC,EAAZA,MAK9B,KAV8B,2CAAH,qDAajBC,EAAe,mCAAG,WAAMC,GAAN,yFACNP,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,kBAC+BS,IAFzB,uBACrBN,EADqB,EACrBA,KADqB,kBAItBA,EAAKC,QAAQC,KAAI,YACtB,MAAO,CACLC,GAFuC,EAAhBA,GAGvBC,MAHuC,EAAZA,MAK9B,KAT4B,2CAAH,sDAYfG,EAAe,mCAAG,WAAMJ,GAAN,yFACNJ,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BO,EAA9B,oBAA4CN,IADtC,uBACrBG,EADqB,EACrBA,KADqB,kBAGtBA,GAHsB,2CAAH,sDAMfQ,EAAe,mCAAG,WAAML,GAAN,yFACNJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDO,EADC,4BACqBN,IAFf,uBACrBG,EADqB,EACrBA,KADqB,kBAItBA,EAAKS,KAAKP,KAAI,YACnB,MAAO,CACLC,GAFqE,EAAjDA,GAGpBO,UAHqE,EAA7CA,UAIxBC,cAJqE,EAAlCA,cAKnCC,aALqE,EAAnBA,aAOrD,KAX4B,2CAAH,sDAcfC,EAAe,mCAAG,WAAMV,GAAN,yFACNJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDO,EADC,4BACqBN,IAFf,uBACrBG,EADqB,EACrBA,KADqB,kBAItBA,EAAKC,QAAQC,KAAI,YACtB,MAAO,CACLC,GAFiD,EAA1BA,GAGvBW,QAHiD,EAAtBA,QAI3BC,OAJiD,EAAbA,OAMvC,KAV4B,2CAAH,qD,gFC/CfC,E,QAAeC,EAAAA,IAAH,iI,SCCZC,EAAS,WACpB,OACE,SAACF,EAAD,WACE,SAAC,KAAD,CACEG,OAAO,MACPC,MAAM,MACNC,MAAM,OACNC,eAAe,SACfC,OAAO,OACPC,UAAU,wBACVC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,KAIhB,C,8CCLD,IAZmB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpB,OACE,wBACGA,EAAO1B,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,yBACE,SAAC,KAAD,CAAMyB,GAAE,kBAAa1B,GAArB,SAA4BC,KADrBD,EADC,KAOjB,C,wKCeD,EAzBmB,WACjB,OAA4B2B,EAAAA,EAAAA,MAAnBC,GAAT,eAcA,OACE,kBAAMC,SAba,SAAAC,GACnBA,EAAEC,iBAEF,IAAM5B,EAAQ2B,EAAEE,OAAOC,OAAOC,MAAMC,cAAcC,OAE7CjC,GAILyB,EAAgB,CAAEzB,MAAAA,GACnB,EAGC,WACE,kBAAOkC,QAAQ,SAAf,UACE,kBAAOC,KAAK,OAAOC,KAAK,cAE1B,mBAAQD,KAAK,SAAb,SAAsB,aAG3B,E,UCiBD,EAlCe,WACb,OAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOf,EAAP,KAAegB,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAAqBH,EAAAA,EAAAA,UAAS,MAArBI,GAAT,eACA,GAAuBjB,EAAAA,EAAAA,MACjBxB,GADN,eAC2B0C,IAAI,SAoB/B,OAlBAC,EAAAA,EAAAA,YAAU,WACH3C,IAIL,iBAAC,2FACCwC,GAAa,GADd,mBAGsBzC,EAAAA,EAAAA,IAAgBC,GAHtC,OAGSN,EAHT,OAIG4C,EAAU5C,GAJb,gDAMG+C,EAAS,8BANZ,yBAQGD,GAAa,GARhB,2EAAD,EAWD,GAAE,CAACxC,KAGF,UAAC,KAAD,YACE,SAAC,EAAD,KACA,SAAC4C,EAAA,EAAD,CAAYtB,OAAQA,IACnBiB,IAAa,SAAC3B,EAAA,EAAD,MAGnB,C","sources":["api/moviesApi.js","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MoviesList/MoviesList.jsx","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'db1fc310bcef39c6a9a836ce0736e327';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}trending/all/day?api_key=${API_KEY}`\n  );\n\n  return data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\n\nexport const getSearchMovies = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await axios.get(`${BASE_URL}movie/${id}?api_key=${API_KEY}`);\n\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return data.cast.map(({ id, character, original_name, profile_path }) => {\n    return {\n      id,\n      character,\n      original_name,\n      profile_path,\n    };\n  });\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return data.results.map(({ id, content, author }) => {\n    return {\n      id,\n      content,\n      author,\n    };\n  });\n};\n","import styled from '@emotion/styled';\n\nexport const WrapperStyle = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  height: 100vh;\n`;\n","import { MutatingDots } from 'react-loader-spinner';\nimport { WrapperStyle } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <WrapperStyle>\n      <MutatingDots\n        height=\"100\"\n        width=\"100\"\n        color=\"aqua\"\n        secondaryColor=\"purple\"\n        radius=\"12.5\"\n        ariaLabel=\"mutating-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n      />\n    </WrapperStyle>\n  );\n};\n","import { Link } from 'react-router-dom';\n\nconst MoviesList = ({ movies }) => {\n  return (\n    <ul>\n      {movies.map(({ id, title }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`}>{title}</Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n","import { useSearchParams } from 'react-router-dom';\n\nconst SearchForm = () => {\n  const [, setSearchParams] = useSearchParams();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const query = e.target.search.value.toLowerCase().trim();\n\n    if (!query) {\n      return;\n    }\n\n    setSearchParams({ query });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label htmlFor=\"search\">\n        <input type=\"text\" name=\"search\" />\n      </label>\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nexport default SearchForm;\n","import { getSearchMovies } from 'api/moviesApi';\nimport { Section } from 'components';\nimport { Loader } from 'components/Loader/Loader';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [, setError] = useState(null);\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    (async () => {\n      setIsLoading(true);\n      try {\n        const data = await getSearchMovies(query);\n        setMovies(data);\n      } catch (error) {\n        setError('Sorry something went wrong');\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [query]);\n\n  return (\n    <Section>\n      <SearchForm />\n      <MoviesList movies={movies} />\n      {isLoading && <Loader />}\n    </Section>\n  );\n};\n\nexport default Movies;\n"],"names":["BASE_URL","API_KEY","getTrendingMovies","axios","data","results","map","id","title","getSearchMovies","query","getMovieDetails","getMovieCredits","cast","character","original_name","profile_path","getMovieReviews","content","author","WrapperStyle","styled","Loader","height","width","color","secondaryColor","radius","ariaLabel","wrapperStyle","wrapperClass","visible","movies","to","useSearchParams","setSearchParams","onSubmit","e","preventDefault","target","search","value","toLowerCase","trim","htmlFor","type","name","useState","setMovies","isLoading","setIsLoading","setError","get","useEffect","MoviesList"],"sourceRoot":""}