{"version":3,"file":"static/js/278.a2a521e8.chunk.js","mappings":"0OAwCA,UAlCe,WACb,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAqBJ,EAAAA,EAAAA,UAAS,MAArBK,GAAT,eACA,GAAuBC,EAAAA,EAAAA,MACjBC,GADN,eAC2BC,IAAI,SAoB/B,OAlBAC,EAAAA,EAAAA,YAAU,WACHF,IAIL,iBAAC,2FACCH,GAAa,GADd,mBAGsBM,EAAAA,EAAAA,IAAgBH,GAHtC,OAGSI,EAHT,OAIGT,EAAUS,GAJb,gDAMGN,EAAS,8BANZ,yBAQGD,GAAa,GARhB,2EAAD,EAWD,GAAE,CAACG,KAGF,UAAC,KAAD,YACE,SAAC,KAAD,KACA,SAAC,KAAD,CAAYN,OAAQA,IACnBE,IAAa,SAAC,KAAD,MAGnB,C","sources":["pages/Movies/Movies.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearchMovies } from 'api/moviesApi';\n\nimport { Loader, MoviesList, SearchForm, Section } from 'components';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [, setError] = useState(null);\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    (async () => {\n      setIsLoading(true);\n      try {\n        const data = await getSearchMovies(query);\n        setMovies(data);\n      } catch (error) {\n        setError('Sorry something went wrong');\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [query]);\n\n  return (\n    <Section>\n      <SearchForm />\n      <MoviesList movies={movies} />\n      {isLoading && <Loader />}\n    </Section>\n  );\n};\n\nexport default Movies;\n"],"names":["useState","movies","setMovies","isLoading","setIsLoading","setError","useSearchParams","query","get","useEffect","getSearchMovies","data"],"sourceRoot":""}